(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{485:function(t,n,e){var o=e(492);"string"==typeof o&&(o=[[t.i,o,""]]);e(93)(o,{hmr:!0,transform:void 0,insertInto:void 0}),o.locals&&(t.exports=o.locals)},491:function(t,n,e){"use strict";var o=e(485);e.n(o).a},492:function(t,n,e){(t.exports=e(52)()).push([t.i,"\n.wrap[data-v-157694d9] {\n  width: 100%;\n  height: 1200px;\n  background: #f5f5f5;\n  box-sizing: border-box;\n}\n",""])},499:function(t,n,e){"use strict";e.r(n);var o=function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"wrap"},[e("input",{attrs:{type:"text",value:"测试刷新用的"}}),t._v(" "),e("input",{attrs:{type:"button",value:"跳转"},on:{click:t.goto}}),t._v(" "),e("input",{attrs:{type:"button",value:"替换"},on:{click:t.replaceTo}}),t._v(" "),e("h3",[t._v("跳转: this.$tab.push()")]),t._v(" "),e("pre",[t._v("类似 vue 的 this.$router.push,可以在当前页签下跳转到另一个组件,且可以带参数\n\n参数说明\n第一个参数【必选】 可以是字符串，也可以是对象\n1.字符串\n1.1 字符串不带参数，就是一个组件名。打开对应的组件\n1.2 字符串后带查询参数，会自动解析，并在目标组件可以通过 this.$tab.query() 获取\n      需要注意的是 query() 是一个函数,这个跟vue-router不同,不过返回的数据格式跟vue一样\n\n2.对象 第一个参数是一个对象的话，格式如下\n{\npath:'组件名称',  // 必选\nquery: {}        // 可选，Object类型，要带的查询参数,获取方式同上\n}\n\n第一个参数【可选】，是一个对象\n也是查询参数，这个参数会上面参数合并，如果刚好有同名的参数，则会覆盖上面的参数\n理论上，push()方法是可以在全局的任何地方使用，不过需要注意的是不管何时，在哪里push,push的目标始终是当前激活的那个tab.\n")]),t._v(" "),e("h3",[t._v("替换: this.$tab.replace()")]),t._v(" "),e("div",[t._v("用法同 push,不同的是 replace 是直接替换当前历史记录,所以不会产生新的历史记录")]),t._v(" "),e("h3",[t._v("后退: this.$tab.back()")]),t._v(" "),e("pre",[t._v("      接收一个正整数作为后退的步数(可选,默认是1)\n    ")])])};o._withStripped=!0;var i={data:function(){return{}},methods:{goto:function(){this.$tab.push("hello2?id=1&num=2",{age:188})},replaceTo:function(){this.$tab.replace("hello2?id=3&num=33",{age:333})}},created:function(){console.log("控制台打印:",this.$tab.info())}},a=(e(491),e(143)),r=Object(a.a)(i,o,[],!1,null,"157694d9",null);r.options.__file="src/Views/hello1.vue",n.default=r.exports}}]);